

name: Django CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      MONGO_USER: ${{ secrets.MONGO_USER }}
      MONGO_PASS: ${{ secrets.MONGO_PASS }}
      MONGO_USER_ADMIN: ${{ secrets.MONGO_USER_ADMIN }}
      MONGO_PASS_ADMIN: ${{ secrets.MONGO_PASS_ADMIN }}
      MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
      MONGO_HOST: ${{ secrets.MONGO_HOST }}
      MONGO_PORT: ${{ secrets.MONGO_PORT }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Django environment
        run: |
          export DJANGO_SETTINGS_MODULE=autoML_final.settings
          export DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB
          export MONGO_DB_URI=mongodb://$MONGO_USER:$MONGO_PASS@$MONGO_HOST:$MONGO_PORT/$MONGO_DB_NAME

      - name: Set up Docker Compose
        run: |
          # Installer Docker Compose si non installé
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start PostgreSQL and MongoDB with Docker Compose
        run: |
          cd autoML
          POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          POSTGRES_HOST=postgres \
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
          MONGO_USER=${{ secrets.MONGO_USER }} \
          MONGO_PASS=${{ secrets.MONGO_PASS }} \
          MONGO_USER_ADMIN=${{ secrets.MONGO_USER_ADMIN }} \
          MONGO_PASS_ADMIN=${{ secrets.MONGO_PASS_ADMIN }} \
          MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }} \
          MONGO_HOST=${{ secrets.MONGO_HOST }} \
          MONGO_PORT=${{ secrets.MONGO_PORT }} \
          docker-compose up -d --build
          docker-compose ps

      - name: Wait for PostgreSQL to be ready
        run: |
          until PGPASSWORD=$POSTGRES_PASSWORD pg_isready -h localhost -p 5432 -U $POSTGRES_USER -d $POSTGRES_DB; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      
      - name: Install MongoDB Shell (mongosh)
        run: |
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg --dearmor -o /usr/share/keyrings/mongodb-server-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/mongodb-server-keyring.gpg] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt update
          sudo apt install -y mongodb-mongosh

      - name: Wait for MongoDB to be ready
        run: |
          until mongosh --host localhost --port 27017 -u $MONGO_USER -p $MONGO_PASS --authenticationDatabase $MONGO_DB_NAME --eval 'db.adminCommand("ping")'; do
            echo "Waiting for MongoDB..."
            sleep 2 
          done
        
      - name: Exécuter les migrations
        run: |
          cd autoML
          docker-compose run web python manage.py migrate

      - name: Check PostgreSQL logs
        run: |
          cd autoML
          docker-compose logs postgres

      - name: List tables in PostgreSQL
        run: |
          cd autoML
          docker-compose exec -T postgres bash -c "PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -p $POSTGRES_PORT -c '\dt'"

      - name: Run Django Tests (Example)
        run: |
          cd autoML 
          docker-compose run web python manage.py test
      
      - name: Arréter docker compose
        run : |
          cd autoML
          docker-compose down

    
